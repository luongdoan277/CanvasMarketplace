@model ICollection<ProductDTO>
@{
    ViewData["Title"] = "Dresses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Categories Page Section Begin -->
<!-- Categories Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5 pb-3">
        @if (Model.Count == 0)
        {
            <div class="col-12 text-center">
                <p class="font-weight-bold">No products available.</p>
            </div>
        }
        else
        {
            @foreach (var item in Model)
            {
                <div class="col-lg-4 col-md-6 pb-1">
                    <div class="cat-item d-flex flex-column border mb-4" style="padding: 30px;">
                        <a asp-controller="Shop" asp-action="ProductDetail" asp-route-id="@item.Id" class="cat-img position-relative overflow-hidden mb-3">
                            <img class="img-fluid resize-image" src="@item.ImageUrl" alt="">
                        </a>
                        <h5 class="font-weight-semi-bold m-0">@item.Name</h5>
                        <p class="mb-0 price">$@item.Price</p>
                    </div>
                </div>
            }
        }
    </div>
</div>
<!-- Categories Page Section End -->

<script>
    function formatCurrency(number) {
        return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(number);
    }

    // Function to resize images based on screen width and center them vertically
    function resizeImages() {
        const images = document.querySelectorAll(".resize-image");
        images.forEach(image => {
            const screenWidth = window.innerWidth;
            const desiredWidth = screenWidth >= 992 ? 250 : (screenWidth / 992) * 250;
            const desiredHeight = (desiredWidth / 250) * 350;

            image.style.width = desiredWidth + "px";
            image.style.height = desiredHeight + "px";

            // Calculate margin to vertically center the image
            const margin = (desiredHeight - image.clientHeight) / 2;
            image.style.marginTop = margin + "px";
            image.style.marginBottom = margin + "px";
        });
    }

    // Call the function when the page loads and when the window is resized
    window.addEventListener("load", resizeImages);
    window.addEventListener("resize", resizeImages);

    // Format prices using the formatCurrency function
    const priceElements = document.querySelectorAll(".price");
    priceElements.forEach(element => {
        const price = parseFloat(element.textContent.replace("$", ""));
        element.textContent = formatCurrency(price);
    });
        

</script>
