@{
    ViewData["Title"] = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Page Add Section Begin -->
<section class="page-add cart-page-add">
    <!-- ... (giữ nguyên phần này) ... -->
</section>
<!-- Page Add Section End -->
<!-- Cart Page Section Begin -->
<div class="cart-page">
    <div class="container">
        <div class="cart-table">
            <table>
                <thead>
                    <tr>
                        <th class="product-h">Product</th>
                        <th>Price</th>
                        <th class="quan">Quantity</th>
                        <th>Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="cart-items">
                    <!-- Đây là nơi chúng ta sẽ thêm thông tin sản phẩm từ localStorage bằng JavaScript -->
                </tbody>
            </table>
        </div>

        <!-- Hiển thị thông báo khi không có sản phẩm trong giỏ hàng -->
        <p id="empty-cart-msg" class="text-center">No products in cart.</p>
    </div>
    <div class="shopping-method">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="total-info">
                        <div class="total-table">
                            <table>
                                <thead>
                                    <tr>
                                        <th>Total</th>
                                        <th>Subtotal</th>
                                        <th>Shipping</th>
                                        <th class="total-cart">Total Cart</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td id="cart-total" class="total">$0</td>
                                        <td id="sub-total" class="sub-total">$0</td>
                                        <td id="shipping-fee" class="shipping">$0</td>
                                        <td id="total-cart-price" class="total-cart-p">$0</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 text-right">
                                <a asp-controller="ManageProduct" asp-action="CheckoutOut" class="primary-btn chechout-btn">Proceed to checkout</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Cart Page Section End -->

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];
        const cartItemsContainer = document.getElementById("cart-items");
        const emptyCartMsg = document.getElementById("empty-cart-msg");
        const cartTotalElement = document.getElementById("cart-total");
        const subTotalElement = document.getElementById("sub-total");
        const shippingFeeElement = document.getElementById("shipping-fee");
        const totalCartPriceElement = document.getElementById("total-cart-price");

        if (cartItems.length === 0) {
            emptyCartMsg.style.display = "block";
            cartTotalElement.textContent = "$0";
            subTotalElement.textContent = "$0";
            shippingFeeElement.textContent = "$0";
            totalCartPriceElement.textContent = "$0";
        } else {
            let cartTotal = 0;
            cartItems.forEach(item => {
                const row = document.createElement("tr");
                const itemTotal = item.Price * item.Quantity;
                cartTotal += itemTotal;

                row.innerHTML = `
                            <td class="product-col">
                                <img src="${item.ImageUrl}" alt="">
                                <div class="p-title">
                                    <h5>${item.Name}</h5>
                                </div>
                            </td>
                            <td class="price-col">$${item.Price}</td>
                            <td class="quantity-col">
                                <div class="pro-qty">
                                    <input type="text" value="${item.Quantity}">
                                </div>
                            </td>
                            <td class="total">$${itemTotal}</td>
                            <td class="product-close"><button class="remove-item" data-id="${item.Id}">x</button></td>
                        `;
                cartItemsContainer.appendChild(row);
            });

            // Tính toán tổng tiền, subtotal và phí vận chuyển
            const shippingFee = cartTotal * 0.15;
            const subTotal = cartTotal;
            const totalCartPrice = cartTotal + shippingFee;

            // Hiển thị các giá trị tính toán
            cartTotalElement.textContent = `$${cartTotal.toFixed(2)}`;
            subTotalElement.textContent = `$${subTotal.toFixed(2)}`;
            shippingFeeElement.textContent = `$${shippingFee.toFixed(2)}`;
            totalCartPriceElement.textContent = `$${totalCartPrice.toFixed(2)}`;
        }

        // Xử lý sự kiện khi click vào nút xóa sản phẩm
        const removeButtons = document.querySelectorAll(".remove-item");
        removeButtons.forEach(button => {
            button.addEventListener("click", function (event) {


                const productId = event.target.getAttribute("data-id");
                const updatedCartItems = cartItems.filter(item => item.Id != productId);
                localStorage.setItem("cartItems", JSON.stringify(updatedCartItems));
                updateCartItemsAndTotal();
                const row = event.target.closest("tr");
                row.remove();
                if (updatedCartItems.length === 0) {
                    emptyCartMsg.style.display = "block";
                }
            });
        });

        function getCartItems() {
            return JSON.parse(localStorage.getItem('cartItems')) || [];
        }

        function updateCartItemsAndTotal() {
            let cartItems = getCartItems();
            let totalCount = cartItems.length;
            $("#cart-item-count").text(totalCount);

            if (cartItems.length === 0) {
                emptyCartMsg.style.display = "block";
                cartTotalElement.textContent = "$0";
                subTotalElement.textContent = "$0";
                shippingFeeElement.textContent = "$0";
                totalCartPriceElement.textContent = "$0";
            } else {
                let cartTotal = 0;
                cartItems.forEach(item => {
                    const itemTotal = item.Price * item.Quantity;
                    cartTotal += itemTotal;
                });

                const shippingFee = cartTotal * 0.15;
                const subTotal = cartTotal;
                const totalCartPrice = cartTotal + shippingFee;

                cartTotalElement.textContent = `$${cartTotal.toFixed(2)}`;
                subTotalElement.textContent = `$${subTotal.toFixed(2)}`;
                shippingFeeElement.textContent = `$${shippingFee.toFixed(2)}`;
                totalCartPriceElement.textContent = `$${totalCartPrice.toFixed(2)}`;
            }
        }
    });
</script>
